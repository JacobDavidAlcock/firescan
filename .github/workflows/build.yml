name: Build

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [linux, windows, darwin]
        goarch: [amd64, arm64]
        exclude:
          # Exclude combinations that don't make sense
          - goos: windows
            goarch: arm64

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.24"
          cache: true

      - name: Build
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
        run: |
          mkdir -p dist
          if [ "$GOOS" = "windows" ]; then
            go build -v -o dist/firescan-${{ matrix.goos }}-${{ matrix.goarch }}.exe ./cmd/firescan
          else
            go build -v -o dist/firescan-${{ matrix.goos }}-${{ matrix.goarch }} ./cmd/firescan
          fi

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: firescan-${{ matrix.goos }}-${{ matrix.goarch }}
          path: dist/*
          retention-days: 7

  build-summary:
    name: Build Summary
    runs-on: ubuntu-latest
    needs: build
    if: always()

    steps:
      - name: Check build status
        run: |
          if [ "${{ needs.build.result }}" = "success" ]; then
            echo "✅ All builds completed successfully!"
          else
            echo "❌ Some builds failed"
            exit 1
          fi
